#!/usr/bin/perl
use strict;
use warnings;


my @tmin;
my @tmax;
my @tavg;
my @prcp;
my @snow;
my @snwd;

my $file = substr($ARGV[0], 0, 11);
my $year;
my $prevYear = 0;
my $prevMonth = 0;
my $month;
my @daysInMonth = (31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);
my $dayn;
my $day;
my $element;
my $i;
my $j;
my $lat;
my $lon;
my $begin;
my $end;
my $name;

open (my $input, '<:encoding(UTF-8)', "$ARGV[0]") or die "Could not open $ARGV[0]: $!";
open (my $inventory, '<:encoding(UTF-8)', "ghcnd-inventory.txt") or die "Could not open ghcdn-inventory.txt: $!";
open (my $station, '<:encoding(UTF-8)', "ghcnd-stations.txt") or die "Could not open ghcdn-stations.txt: $!";
open (my $json, '>', "$file.json") or die "Could not open $ARGV[0].json: $!";
open (my $csv, '>', "$file.csv") or die "Could not open $file.json: $!";

while (my $line = <$inventory>) {
	if (substr($line, 0, 11) eq $file) {
		$lat = substr($line, 12, 8);
		$lon = substr($line, 21, 9);
		$begin = substr($line, 36, 4);
		$end = substr($line, 41, 4);

		$lat =~ s/^\s+//;
		$lon =~ s/^\s+//;
	}
}
close $inventory;

while (my $line = <$station>) {
	if (substr($line, 0, 11) eq $file) {
		$name = substr($line, 41, 30);
		$name =~ s/\s+$//;
	}
}

close $station;

print $csv "=======================================================================================================================================================================\n";
print $csv "$name ($lat, $lon), $begin,$end\n";
print $csv "-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
print $csv "Original data from Global Historical Climatology Network V2 (http://www.ncdc.noaa.gov/oa/climate/ghcn-daily/)\n";
print $csv "This file generated by Climate Reanalyzer (http://cci-reanalyzer.org)\n";
print $csv "Climate Change Institute; University of Maine; USA (http://climatechange.umaine.edu)\n";
print $csv "KEY -- TMIN/TMAX/TMEAN = Temperature min/max/mean; PRCP = Precipitation; SNOW = Snowfall; SNWD = Snowdepth; WESD = Water Equiv. Snowdepth; WESN = Water Equiv. Snowfall\n";
print $csv "UNITS -- TMIN/TMAX/TMEAN deg C; PRCP mm; SNOW/SNWD/WESD/WESN cm;\n";
print $csv "=======================================================================================================================================================================\n";

print $json "{\n";
print $csv "\tYear,\tMonth,\tDay,\tDAYN,\tTMIN,\tTMAX,\tTMEAN,\tPRCP,\tSNOW,\tSNWD\n";

for ($i = 0; $i < 31; $i++) {
	$tmin[$i] = -9999;
	$tmax[$i] = -9999;
	$tavg[$i] = -9999;
	$prcp[$i] = -9999;
	$snow[$i] = -9999;
	$snwd[$i] = -9999;
}

while (my $line = <$input>)  {
	$year = substr($line, 11, 4);
	$month = substr($line, 15, 2);
	$element = substr($line, 17, 4);

	$j = $daysInMonth[$month - 1];
	if ($month == 2 && isLeapYear($year)) {
		$j = 29;
	}

	if ($prevYear != $year) { # if a new year
		$dayn = 0;
		$prevYear = $year;
	}

	for ($i = 0; $i < $j; $i++) {
		if ($element eq "TMIN") {$tmin[$i] = substr($line, $i * 8 + 21, 5);}
		if ($element eq "TMAX") {$tmax[$i] = substr($line, $i * 8 + 21, 5);}
		if ($element eq "TAVG") {$tavg[$i] = substr($line, $i * 8 + 21, 5);}
		if ($element eq "PRCP") {$prcp[$i] = substr($line, $i * 8 + 21, 5);}
		if ($element eq "SNWD") {$snwd[$i] = substr($line, $i * 8 + 21, 5);}
		if ($element eq "SNOW") {$snow[$i] = substr($line, $i * 8 + 21, 5);}
	}

	if ($prevMonth != $month) { # if a new month
		for ($i = 0; $i < $j; $i++) {
			$day = $i + 1;
			$dayn++;
			print $csv "\t$year,\t   $month,\t  $day,\t   $dayn,\t$tmin[$i],\t$tmax[$i],\t$tavg[$i],\t$prcp[$i],\t$snow[$i],\t$snwd[$i]\n";
			print $json "{Year:$year,Month:$month,Day:$day,DAYN:$dayn,TMIN:$tmin[$i],TMAX:$tmax[$i],TMEAN:$tavg[$i],PRCP:$prcp[$i],SNOW:$snow[$i],SNWD:$snwd[$i]},\n";
		}
		$prevMonth = $month;
		$day = 1;
	}

}

print $json "}";

sub isLeapYear {
	my ($y) = @_;
	if ((($y % 4) == 0) && (($y % 100) != 0) || (($y % 400) == 0)) {
		return 1;
	} else {
		return 0;
	}
}
close $input;
close $csv;
close $json;
